// <auto-generated />
using System;
using CosmenticFormulaApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CosmenticFormulaApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.Formula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsHighlighted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("TotalCost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Weight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("WeightUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Formulas");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.FormulaRawMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormulaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RawMaterialId");

                    b.HasIndex("FormulaId", "RawMaterialId")
                        .IsUnique();

                    b.ToTable("FormulaRawMaterials");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.RawMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RawMaterials");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.RawMaterialSubstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubstanceId");

                    b.HasIndex("RawMaterialId", "SubstanceId")
                        .IsUnique();

                    b.ToTable("RawMaterialSubstances");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.Substance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Substances");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.FormulaRawMaterial", b =>
                {
                    b.HasOne("CosmenticFormulaApp.Domain.Entities.Formula", "Formula")
                        .WithMany("FormulaRawMaterials")
                        .HasForeignKey("FormulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmenticFormulaApp.Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("FormulaRawMaterials")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Formula");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.RawMaterial", b =>
                {
                    b.OwnsOne("CosmenticFormulaApp.Domain.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<int>("RawMaterialId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("PriceAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("PriceCurrency");

                            b1.Property<string>("ReferenceUnit")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("PriceReferenceUnit");

                            b1.HasKey("RawMaterialId");

                            b1.ToTable("RawMaterials");

                            b1.WithOwner()
                                .HasForeignKey("RawMaterialId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.RawMaterialSubstance", b =>
                {
                    b.HasOne("CosmenticFormulaApp.Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("RawMaterialSubstances")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmenticFormulaApp.Domain.Entities.Substance", "Substance")
                        .WithMany("RawMaterialSubstances")
                        .HasForeignKey("SubstanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RawMaterial");

                    b.Navigation("Substance");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.Formula", b =>
                {
                    b.Navigation("FormulaRawMaterials");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.RawMaterial", b =>
                {
                    b.Navigation("FormulaRawMaterials");

                    b.Navigation("RawMaterialSubstances");
                });

            modelBuilder.Entity("CosmenticFormulaApp.Domain.Entities.Substance", b =>
                {
                    b.Navigation("RawMaterialSubstances");
                });
#pragma warning restore 612, 618
        }
    }
}
